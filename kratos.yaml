- name: Install Kratos
  hosts: raspberrypi
  remote_user: root
  vars:
    ca_dir : /usr/local/share/ca-certificates/local
    ca_key_path: "{{ ca_dir }}/local_ca.key"
    ca_cert_path: "{{ ca_dir }}/local_ca.crt"

    kratos_version: 1.1.0
    kratos_home: "/var/lib/kratos"
    kratos_bin: "/opt/kratos/bin"
    kratos_cert_dir: "/opt/kratos/cert"
    kratos_config: "/opt/kratos/config"
    key_file: "{{ kratos_cert_dir }}/kratos_local.key"
    cert_file: "{{ kratos_cert_dir }}/kratos_local.crt"

    sqlite_file: "{{ kratos_home }}/data/kratos.sqlite"
    dsn: "sqlite://{{ sqlite_file }}?_fk=true"
    hydra_url: https://hydra.local:4445
    kratos_url: https://kratos.local
    schema_location: /etc/config/kratos
    schema_file: "{{ schema_location }}/identity.schema.json"

  tasks:
    - import_tasks: service_user.yaml
      vars:
        user_name: kratos
    - name: Create install dir
      ansible.builtin.file:
        path: "{{ kratos_bin }}"
        state: directory
        group: kratos
        owner: kratos
        mode: '755'
    - name: Create config dir
      ansible.builtin.file:
        path: "{{ kratos_config }}"
        state: directory
        group: kratos
        owner: kratos
        mode: '755'
    - name: Create cert dir
      ansible.builtin.file:
        path: "{{ kratos_cert_dir }}"
        state: directory
        group: kratos
        owner: kratos
        mode: '755'

    - import_tasks: certificate.yaml
      vars:
        domain: kratos.local

    - import_tasks: download_tar_gz.yaml
      vars:
        url: "https://github.com/ory/kratos/releases/download/v{{ kratos_version }}/kratos_{{ kratos_version }}-linux_sqlite_arm64.tar.gz" 
        destination: "{{ kratos_bin }}"

    - name: Create kratos directory
      ansible.builtin.file:
        path: "{{ kratos_home }}"
        state: directory
        group: kratos
        owner: kratos
    - name: Create data directory
      ansible.builtin.file:
        path: "{{ kratos_home }}/data"
        state: directory
        group: kratos
        owner: kratos
    - name: Copy config file
      ansible.builtin.template:
        src: kratos/config.yaml
        dest: "{{ kratos_config }}/config.yaml"
        owner: kratos
        group: kratos
        mode: "644"
    - name: Create etc config directory
      ansible.builtin.file:
        path: "{{ schema_location }}"
        state: directory
        group: kratos
        owner: kratos
    - name: Copy identity file
      ansible.builtin.copy:
        src: kratos/identity.schema.json
        dest: "{{ schema_file }}"
        owner: root
        mode: "644"

    - name: Migrate sqlite database
      ansible.builtin.shell:
        cmd: "{{ kratos_bin }}/kratos migrate -c {{ kratos_config }}/config.yaml sql --yes {{ dsn }}"
    - name: Update sqlite file permissions
      ansible.builtin.file:
        path: "{{ sqlite_file }}"
        owner: kratos
        group: kratos
        mode: '0644'

    - import_tasks: systemd_service.yaml
      vars:
        name: kratos
        user: kratos
        group: kratos
        exec: /opt/kratos/bin/kratos -c /opt/kratos/config/config.yaml serve